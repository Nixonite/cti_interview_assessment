* pass the bucket and key to the command line arguments.
    For simplicity of this specific project, I just put it into the config file.

* Buy the maxmind database license for a more accurate database
    or proper api usage.

* Turn this program into a microservice so that non-python software can utilize it easily.
    Also it's a pain to download the database every time you want to run this program so there is
    another reason for doing this. 

* With more time I would fix potential path issues. Replace relative paths with 
    absolute ones generated by os.path.abspath(os.path.dirname(__file__)) etc.
    At the current state, the program would break when run from any other directory.

* add "created_at" field for the tables

* add some foreign keys for IP addresses

* make the ip address table unique on ip addresses with a constraint then use 
    this code for checking before inserting
    https://stackoverflow.com/questions/2546207/does-sqlalchemy-have-an-equivalent-of-djangos-get-or-create

* add a foreign key for ip addresses. 

* add some indices somewhere in case you want to search these logs with any kind of speed. 

* add more cmd line arguments for whatever customizations may still be desired

* make a proper models directory and separate the models into their own files

* rewrite it in elixir